# -*- coding: utf-8 -*-
"""Mission_Coco.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r9eC0AbxV3-yrp1n5QhlS4NgtKYoRAfZ
"""

!git clone https://github.com/ultralytics/yolov5
!pip install pillow

!pip install -r /content/yolov5/requirements.txt

import torch
import cv2
from PIL import Image
import matplotlib.pyplot as plt
import numpy as np
import torchvision
import torchvision.transforms as transforms
from torchvision.io import read_image

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/yolov5

model = torch.hub.load('ultralytics/yolov5', 'yolov5s')

model.names={
 47: 'apple',
 49: 'orange'}

Dict = model.names
Dict[47]

PATH="/content/OIP.jpg"
#PATH="/content/drive/MyDrive/Repositories/yolov5/Dataset/images/train/13.jpg"

results=model(Image.open(PATH))

results=results.xyxy
results = results[0].clone().detach().cpu().numpy()

lis=[]
labels=[]
colors=[]
for i in results:
  if (i[5]==47 or i[5]==49):
    lis.append(i[:4])
    o="{0:.2f}".format(i[4])
    lab=f"{Dict[i[5]]} {o}"
    labels.append(lab)
    colors.append("#000000")

transform= transforms.ToTensor()

#img=read_image("/content/drive/MyDrive/Repositories/yolov5/Dataset/images/train/13.jpg")
img=read_image(PATH)

lis = torch.tensor(np.array(lis), dtype=torch.uint8)
lis

img=torchvision.utils.draw_bounding_boxes(image=img,boxes=lis,width=2,labels=labels,colors=colors)
img1=torchvision.transforms.ToPILImage()(img)
img1.show()

plt.imshow(img1)
plt.savefig("/content/s.png")